{-# STDLIB_VERSION 5     #-}
{-# SCRIPT_TYPE ACCOUNT  #-}
{-# CONTENT_TYPE DAPP    #-}

let axaip = "axai"
let stakerWavesAxai = "wavesaxai_address_contract"
let exchangeRate = 5
let adiminOracle = Address(base58'3MqGE8yKJmPuwn7sXFLo56rhW9tnMapDDRq')
let axai = base58'496Ep8DDZwru81HjT5YAj7vUvYUi4zxyrHCgkD9GXmwe'
let staker = Address(adiminOracle.getString(stakerWavesAxai).valueOrErrorMessage("address for staker for AxAi/Waves is not defined").fromBase58String())

@Callable(i)
func exchangeWavesAxAi() = {
  if (i.payments[0].assetId != unit)
    then
      throw("unexpected asset")
    else {
      strict r = invoke(staker, "cancelStake", [i.payments[0].amount * exchangeRate], [])
      [ ScriptTransfer(i.caller, i.payments[0].amount * exchangeRate, axai) ]
    }
}
